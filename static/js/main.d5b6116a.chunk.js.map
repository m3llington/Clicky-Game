{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","className","onClick","clickCount","id","alt","name","src","image","Wrapper","children","Title","score","highscore","App","state","friends","gameOver","setState","console","log","this","forEach","card","count","alert","find","o","i","sort","Math","random","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"gsEAWeA,G,MARE,SAAAC,GAAK,OACpB,yBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,WAAWH,EAAMI,MAC1D,yBAAKH,UAAU,iBACb,yBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,Y,MCCxBC,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,WCQ1BC,G,MATD,SAAAX,GAAK,OACjB,yBAAKC,UAAU,UACb,yBAAKA,UAAU,SAASD,EAAMU,UAC9B,yBAAKT,UAAU,UAAf,UACUD,EAAMY,MADhB,eACmCZ,EAAMa,c,OCuD9BC,E,2MAtDbC,MAAQ,CACNC,UACAJ,MAAO,EACPC,UAAW,G,EAGbI,SAAW,WAWT,OAVI,EAAKF,MAAMH,MAAQ,EAAKG,MAAMF,WAChC,EAAKK,SAAS,CAACL,UAAW,EAAKE,MAAMH,QAAQ,WAC3CO,QAAQC,IAAIC,KAAKN,MAAMF,cAG3B,EAAKE,MAAMC,QAAQM,SAAQ,SAAAC,GACzBA,EAAKC,MAAQ,KAEfC,MAAM,wBAAD,OAAyB,EAAKV,MAAMH,QACzC,EAAKM,SAAS,CAACN,MAAO,KACf,G,EAGTT,WAAa,SAAAC,GACX,EAAKW,MAAMC,QAAQU,MAAK,SAACC,EAAGC,GAC1B,GAAID,EAAEvB,KAAOA,EAAI,CACf,GAAwB,IAArBY,EAAQY,GAAGJ,MAMZ,OALAR,EAAQY,GAAGJ,MAAQR,EAAQY,GAAGJ,MAAQ,EACtC,EAAKN,SAAS,CAACN,MAAQ,EAAKG,MAAMH,MAAQ,IAAI,WAC5CO,QAAQC,IAAIC,KAAKN,MAAMH,UAEzB,EAAKG,MAAMC,QAAQa,MAAK,kBAAMC,KAAKC,SAAW,OACvC,EAEP,EAAKd,gB,wEAMH,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAOL,MAAOS,KAAKN,MAAMH,MAAOC,UAAWQ,KAAKN,MAAMF,WAAtD,eACCQ,KAAKN,MAAMC,QAAQgB,KAAI,SAAAT,GAAI,OAC1B,kBAAC,EAAD,CACEpB,WAAY,EAAKA,WACjBC,GAAImB,EAAKnB,GACT6B,IAAKV,EAAKnB,GACVI,MAAOe,EAAKf,gB,GAhDN0B,a,MCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d5b6116a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nvar FriendCard = props => (\n  <div className=\"card\" onClick={() => props.clickCount(props.id)}>\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Title = props => (\n  <div className=\"header\">\n    <div className=\"title\">{props.children}</div>\n    <div className=\"scores\">\n      Score: {props.score} Highscore: {props.highscore}\n    </div>\n  </div>\n);\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the cards json array\n  state = {\n    friends,\n    score: 0,\n    highscore: 0\n  };\n\n  gameOver = () => {\n    if (this.state.score > this.state.highscore) {\n      this.setState({highscore: this.state.score}, function() {\n        console.log(this.state.highscore);\n      });\n    }\n    this.state.friends.forEach(card => {\n      card.count = 0;\n    });\n    alert(`Nice Try... \\nscore: ${this.state.score}`);\n    this.setState({score: 0});\n    return true;\n  }\n\n  clickCount = id => {\n    this.state.friends.find((o, i) => {\n      if (o.id === id) {\n        if(friends[i].count === 0){\n          friends[i].count = friends[i].count + 1;\n          this.setState({score : this.state.score + 1}, function(){\n            console.log(this.state.score);\n          });\n          this.state.friends.sort(() => Math.random() - 0.5)\n          return true; \n        } else {\n          this.gameOver();\n        }\n      }\n    });\n  }\n  // Map over this.state.friends and render a cardCard component for each card object\n  render() {\n    return (\n      <Wrapper>\n        <Title score={this.state.score} highscore={this.state.highscore}>Clicky Game</Title>\n        {this.state.friends.map(card => (\n          <FriendCard\n            clickCount={this.clickCount}\n            id={card.id}\n            key={card.id}\n            image={card.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}